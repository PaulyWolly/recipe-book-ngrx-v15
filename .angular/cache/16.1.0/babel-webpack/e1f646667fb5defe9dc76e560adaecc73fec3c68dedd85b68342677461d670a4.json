{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { LoggingService } from './logging.service';\nimport * as AuthActions from './auth/store/auth.actions';\nimport { DOCUMENT, ViewportScroller } from '@angular/common';\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"./logging.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"scroll\"];\nfunction AppComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-scroll\", 6);\n    i0.ɵɵlistener(\"scrollToTop\", function AppComponent_ng_container_0_Template_app_scroll_scrollToTop_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onScrollToTop());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(store, loggingService, document, viewport) {\n      this.store = store;\n      this.loggingService = loggingService;\n      this.document = document;\n      this.viewport = viewport;\n      this.showScroll$ = fromEvent(this.document, 'scroll').pipe(map(() => this.viewport.getScrollPosition()?.[1] > 0));\n    }\n    ngOnInit() {\n      this.store.dispatch(new AuthActions.AutoLogin());\n      this.loggingService.printLog('Hello from AppComponent ngOnInit');\n    }\n    ngAfterViewInit() {}\n    ngAfterContentInit() {\n      // this.scrollToTop();\n      document.body.scrollTop = 0;\n    }\n    onScrollToTop() {\n      this.viewport.scrollToPosition([0, 0]);\n    }\n    scrollToTop() {\n      const ScrollTop = 0;\n      this.scroll.nativeElement.scrollTop = ScrollTop;\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.LoggingService), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i3.ViewportScroller));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroll = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"main-container\"], [\"scroll\", \"\"], [1, \"container\"], [1, \"row\", \"head\"], [1, \"col-md-12\"], [\"alt\", \"Click to scroll to top\", 3, \"scrollToTop\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementStart(2, \"div\", 1, 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵelement(7, \"app-header\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.showScroll$));\n      }\n    },\n    styles: [\".main-container[_ngcontent-%COMP%]{overflow:hidden}.container[_ngcontent-%COMP%]{margin-top:0;height:2000px}.background[_ngcontent-%COMP%]{height:3000px;width:100%}.head[_ngcontent-%COMP%]{width:102%;z-index:99;background:white;position:fixed;left:2px;height:66px;transition:.3s;top:0}.text[_ngcontent-%COMP%]{text-align:center;font-size:50px;color:#000}.scrolled[_ngcontent-%COMP%]{transition:.3s;height:65px}.text_style[_ngcontent-%COMP%]{font-size:30px;color:#fff}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}