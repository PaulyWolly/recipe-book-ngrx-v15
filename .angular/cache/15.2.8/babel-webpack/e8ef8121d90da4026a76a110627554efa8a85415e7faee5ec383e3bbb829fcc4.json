{"ast":null,"code":"import { ComponentFactoryResolver, ElementRef } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AlertComponent } from '../shared/alert/alert.component';\nimport { PlaceholderDirective } from '../shared/placeholder/placeholder.directive';\nimport * as AuthActions from './store/auth.actions';\nimport * as RecipesActions from '../recipes/store/recipe.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../shared/loading-spinner/loading-spinner.component\";\nimport * as i6 from \"../shared/placeholder/placeholder.directive\";\nconst _c0 = [\"scroll\"];\nfunction AuthComponent_ng_template_2_Template(rf, ctx) {}\nfunction AuthComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_form_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9, 10);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_8_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const _r4 = i0.ɵɵreference(1);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSubmit(_r4));\n    });\n    i0.ɵɵelementStart(2, \"div\", 11)(3, \"label\", 12);\n    i0.ɵɵtext(4, \"E-Mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"label\", 14);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"button\", 16);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \" | \");\n    i0.ɵɵelementStart(14, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_8_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSwitchMode());\n    });\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\")(17, \"a\", 18);\n    i0.ɵɵtext(18, \"forgot password?\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"p\");\n    i0.ɵɵtext(20, \"\\u00A0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"h6\");\n    i0.ɵɵtext(22, \"Login token lasts for 1 hour... then you will be logged off.\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(1);\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"disabled\", !_r4.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.isLoginMode ? \"Login\" : \"Sign Up\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Switch to \", ctx_r3.isLoginMode ? \"Sign Up\" : \"Login\", \" \");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(componentFactoryResolver, store) {\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.store = store;\n      this.isLoginMode = true;\n      this.isLoading = false;\n      this.error = null;\n    }\n    ngOnInit() {\n      this.storeSub = this.store.select('auth').subscribe(authState => {\n        this.isLoading = authState.loading;\n        this.error = authState.authError;\n        if (this.error) {\n          this.showErrorAlert(this.error);\n        }\n      });\n    }\n    ngAfterViewInit() {\n      setTimeout(() => {\n        console.log('timeout called');\n        this.scrollTop();\n      }, 500);\n    }\n    // this life-cycle hook is used to scroll to top on page refresh\n    ngAfterContentInit() {\n      document.documentElement.scrollTop = 0;\n    }\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit(form) {\n      if (!form.valid) {\n        return;\n      }\n      const email = form.value.email;\n      const password = form.value.password;\n      if (this.isLoginMode) {\n        // authObs = this.authService.login(email, password);\n        this.store.dispatch(new AuthActions.LoginStart({\n          email,\n          password\n        }));\n        console.log('logged in as ', email);\n        this.loginEmail = email;\n        localStorage.setItem('email', email);\n      } else {\n        this.store.dispatch(new AuthActions.SignupStart({\n          email,\n          password\n        }));\n        console.log('logged out');\n      }\n      form.reset();\n    }\n    onHandleError() {\n      this.store.dispatch(new AuthActions.ClearError());\n    }\n    autoFetchRecipes() {\n      this.store.dispatch(RecipesActions.fetchRecipes());\n    }\n    showErrorAlert(message) {\n      // const alertCmp = new AlertComponent();\n      const alertCmpFactory = this.componentFactoryResolver.resolveComponentFactory(AlertComponent);\n      const hostViewContainerRef = this.alertHost.viewContainerRef;\n      hostViewContainerRef.clear();\n      const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\n      componentRef.instance.message = message;\n      this.closeSub = componentRef.instance.close.subscribe(() => {\n        this.closeSub.unsubscribe();\n        hostViewContainerRef.clear();\n      });\n    }\n    scrollTop() {\n      const TopScroll = 0;\n      console.log('scrollTopOnLoad: ', this.scroll.nativeElement.scrollHeight, TopScroll);\n      this.scroll.nativeElement.scrollTop = TopScroll;\n    }\n    ngOnDestroy() {\n      if (this.closeSub) {\n        this.closeSub.unsubscribe();\n      }\n      if (this.storeSub) {\n        this.storeSub.unsubscribe();\n      }\n    }\n  }\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i1.Store));\n  };\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    viewQuery: function AuthComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(PlaceholderDirective, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.alertHost = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroll = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"form-container\"], [\"scroll\", \"\"], [\"appPlaceholder\", \"\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [1, \"form-title\"], [\"style\", \"text-align: center;\", 4, \"ngIf\"], [3, \"ngSubmit\", 4, \"ngIf\"], [2, \"text-align\", \"center\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"routerLink\", \"/forgot-password\", 1, \"forgot-pwd-link\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, AuthComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, AuthComponent_div_7_Template, 2, 0, \"div\", 6);\n        i0.ɵɵtemplate(8, AuthComponent_form_8_Template, 23, 3, \"form\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLoginMode ? \"Login Form\" : \"Sign Up Form\", \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.EmailValidator, i3.NgModel, i3.NgForm, i4.RouterLink, i5.LoadingSpinnerComponent, i6.PlaceholderDirective],\n    styles: [\".form-container[_ngcontent-%COMP%]{margin-top:150px}.form-title[_ngcontent-%COMP%]{font-size:24px;font-weight:500;margin-bottom:50px;text-shadow:#FC0 1px 0 10px}.forgot-pwd-link[_ngcontent-%COMP%]{float:right;position:relative;top:-24px}\"]\n  });\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}