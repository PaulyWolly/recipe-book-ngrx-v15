{"ast":null,"code":"import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { HttpClient } from '@angular/common/http';\nimport { switchMap, map, withLatestFrom } from 'rxjs/operators';\nimport * as RecipeActions from './recipe.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@ngrx/store\";\nexport let RecipeEffects = /*#__PURE__*/(() => {\n  class RecipeEffects {\n    constructor(actions$, http, store) {\n      this.actions$ = actions$;\n      this.http = http;\n      this.store = store;\n      this.fetchRecipes = createEffect(() => this.actions$.pipe(ofType(RecipeActions.fetchRecipes), switchMap(() => {\n        return this.http.get('https://ng-recipe-book-86d0a-default-rtdb.firebaseio.com/recipes.json'\n        // 'https://ng-course-recipe-book-65f10.firebaseio.com/recipes.json'\n        );\n      }), map(recipes => {\n        return recipes.map(recipe => {\n          return {\n            ...recipe,\n            ingredients: recipe.ingredients ? recipe.ingredients : []\n          };\n        });\n      }), map(recipes => {\n        return RecipeActions.setRecipes({\n          recipes\n        });\n      })));\n      this.storeRecipes = createEffect(() => this.actions$.pipe(ofType(RecipeActions.storeRecipes), withLatestFrom(this.store.select('recipes')), switchMap(([actionData, recipesState]) => {\n        return this.http.put('https://ng-recipe-book-86d0a-default-rtdb.firebaseio.com/recipes.json',\n        // 'https://ng-course-recipe-book-65f10.firebaseio.com/recipes.json',\n        recipesState.recipes);\n      })), {\n        dispatch: false\n      });\n    }\n  }\n  RecipeEffects.ɵfac = function RecipeEffects_Factory(t) {\n    return new (t || RecipeEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Store));\n  };\n  RecipeEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeEffects,\n    factory: RecipeEffects.ɵfac\n  });\n  return RecipeEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}