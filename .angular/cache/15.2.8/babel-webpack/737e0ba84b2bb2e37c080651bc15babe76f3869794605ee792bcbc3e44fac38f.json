{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { UntypedFormGroup, UntypedFormControl, UntypedFormArray, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\nimport * as RecipesActions from '../store/recipe.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction RecipeEditComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 22);\n    i0.ɵɵelement(2, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 24);\n    i0.ɵɵelement(4, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 26)(6, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function RecipeEditComponent_div_46_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onDeleteIngredient(i_r3));\n    });\n    i0.ɵɵtext(7, \"X \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n  }\n}\nexport let RecipeEditComponent = /*#__PURE__*/(() => {\n  class RecipeEditComponent {\n    constructor(route, router, store) {\n      this.route = route;\n      this.router = router;\n      this.store = store;\n      this.editMode = false;\n      this.newRecipe = false;\n    }\n    get ingredientsControls() {\n      return this.recipeForm.get('ingredients').controls;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params.id;\n        this.editMode = params.id != null;\n        this.initForm();\n      });\n    }\n    onSubmit() {\n      // UPDATE EXISTING RECIPE\n      // const newRecipe = new Recipe(\n      //   this.recipeForm.value['name'],\n      //   this.recipeForm.value['description'],\n      //   this.recipeForm.value['imagePath'],\n      //   this.recipeForm.value['ingredients']);\n      if (this.editMode) {\n        // this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n        this.store.dispatch(RecipesActions.updateRecipe({\n          index: this.id,\n          newRecipe: this.recipeForm.value\n        }));\n        this.store.dispatch(RecipesActions.storeRecipes());\n      } else {\n        // NEW RECIPE\n        // this.recipeService.addRecipe(this.recipeForm.value);\n        this.store.dispatch(RecipesActions.addRecipe(this.recipeForm.value));\n        this.store.dispatch(RecipesActions.storeRecipes());\n      }\n      this.onCancel();\n    }\n    onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new UntypedFormGroup({\n        name: new UntypedFormControl(null, Validators.required),\n        amount: new UntypedFormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      }));\n    }\n    onDeleteIngredient(index) {\n      this.recipeForm.get('ingredients').removeAt(index);\n    }\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n    ngOnDestroy() {\n      if (this.storeSub) {\n        this.storeSub.unsubscribe();\n      }\n    }\n    initForm() {\n      let recipeName = '';\n      let recipeImagePath = '';\n      let recipeDescription = '';\n      let recipeDirections = '';\n      const recipeIngredients = new UntypedFormArray([]);\n      if (this.editMode) {\n        // const recipe = this.recipeService.getRecipe(this.id);\n        this.storeSub = this.store.select('recipes').pipe(map(recipeState => {\n          return recipeState.recipes.find((recipe, index) => {\n            return index === this.id;\n          });\n        })).subscribe(recipe => {\n          recipeName = recipe.name;\n          recipeImagePath = recipe.imagePath;\n          recipeDescription = recipe.description;\n          recipeDirections = recipe.directions;\n          if (recipe.ingredients) {\n            for (const ingredient of recipe.ingredients) {\n              recipeIngredients.push(new UntypedFormGroup({\n                name: new UntypedFormControl(ingredient.name, Validators.required),\n                amount: new UntypedFormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n              }));\n            }\n          }\n        });\n      }\n      this.recipeForm = new UntypedFormGroup({\n        name: new UntypedFormControl(recipeName, Validators.required),\n        imagePath: new UntypedFormControl(recipeImagePath, Validators.required),\n        description: new UntypedFormControl(recipeDescription, Validators.required),\n        directions: new UntypedFormControl(recipeDirections, Validators.required),\n        ingredients: recipeIngredients\n      });\n      // push new recipe to the DB\n      this.store.dispatch(RecipesActions.storeRecipes());\n    }\n  }\n  RecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n    return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Store));\n  };\n  RecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeEditComponent,\n    selectors: [[\"app-recipe-edit\"]],\n    decls: 56,\n    vars: 4,\n    consts: [[1, \"recipe-edit-column\"], [1, \"row\"], [1, \"recipe-edit\", \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-xs-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"detail-text\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imagePath\"], [\"type\", \"text\", \"id\", \"imagePath\", \"formControlName\", \"imagePath\", 1, \"form-control\"], [\"imagePath\", \"\"], [\"alt\", \"imagePath\", 1, \"img-responsive\", 3, \"src\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"rows\", \"3\", \"contenteditable\", \"true\", 1, \"form-control\"], [\"for\", \"directions\"], [\"type\", \"text\", \"id\", \"directions\", \"formControlName\", \"directions\", \"rows\", \"5\", \"contenteditable\", \"true\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"formArrayName\", \"ingredients\", 1, \"col-xs-12\", \"ingredients-items\"], [\"class\", \"row \", \"style\", \"margin-top: 10px;\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", 2, \"margin-top\", \"10px\", 3, \"formGroupName\"], [1, \"col-xs-8\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"ingredient-item\", \"form-control\"], [1, \"col-xs-3\"], [\"type\", \"number\", \"formControlName\", \"amount\", 1, \"form-control\", \"amount-item\"], [1, \"col-xs-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"x-control\", 3, \"click\"]],\n    template: function RecipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 4)(6, \"button\", 5);\n        i0.ɵɵtext(7, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"\\u00A0 \");\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_9_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(10, \" Cancel \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"div\", 4)(14, \"div\", 7)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"div\", 4)(20, \"div\", 7)(21, \"label\", 10);\n        i0.ɵɵtext(22, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 11, 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 1)(26, \"div\", 4);\n        i0.ɵɵelement(27, \"img\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 1)(29, \"div\", 4)(30, \"div\", 7)(31, \"label\", 14);\n        i0.ɵɵtext(32, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"textarea\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"div\", 1)(35, \"div\", 4)(36, \"div\", 7)(37, \"label\", 16);\n        i0.ɵɵtext(38, \"Directions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"textarea\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"div\", 1)(41, \"div\", 4)(42, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_42_listener() {\n          return ctx.onAddIngredient();\n        });\n        i0.ɵɵtext(43, \" Add Ingredient \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"div\", 1)(45, \"div\", 19);\n        i0.ɵɵtemplate(46, RecipeEditComponent_div_46_Template, 8, 1, \"div\", 20);\n        i0.ɵɵelement(47, \"hr\");\n        i0.ɵɵelementStart(48, \"p\");\n        i0.ɵɵtext(49, \"\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"p\");\n        i0.ɵɵtext(51, \"\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"p\");\n        i0.ɵɵtext(53, \"\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"p\");\n        i0.ɵɵtext(55, \"\\u00A0\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(24);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.recipeForm.valid);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ingredientsControls);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName, i4.NgForOf],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}.row[_ngcontent-%COMP%]{position:relative;left:100px}.recipe-edit-column[_ngcontent-%COMP%]{position:relative;right:100px}.ingredients-items[_ngcontent-%COMP%]{position:relative;right:100px;margin-bottom:50px}\"]\n  });\n  return RecipeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}